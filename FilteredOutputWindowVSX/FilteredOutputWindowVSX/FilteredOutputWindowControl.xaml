
             <UserControl x:Class="FilteredOutputWindowVSX.FilteredOutputWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             Background="{DynamicResource VsBrush.Window}"
             Foreground="{DynamicResource VsBrush.WindowText}"
             mc:Ignorable="d"
             xmlns:controls="clr-namespace:FilteredOutputWindowVSX.Controls"
             xmlns:converters="clr-namespace:FilteredOutputWindowVSX.Converters"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             d:DesignHeight="300" d:DesignWidth="500"
             xmlns:tools="clr-namespace:FilteredOutputWindowVSX.Tools" 
             Name="MyToolWindow">
    <UserControl.Resources>
        <converters:PictureConverter x:Key="PicConverter"/>
        <tools:NullToHiddenConverter x:Key="NullToHiddenConverter"/>
        <tools:BoolToVisConverter x:Key="BoolToVisibility"/>
        <tools:RevertBoolConverter x:Key="RevertBool"/>
        <s:Boolean x:Key="True">True</s:Boolean>
        <s:Boolean x:Key="False">False</s:Boolean>
        <Style TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="TextBlock.FontFamily"
            Value="{DynamicResource VsFont.EnvironmentFontFamily}" />
            <Setter Property="TextBlock.FontSize"
            Value="{DynamicResource VsFont.EnvironmentFontSize}" />
            <Setter Property="Background"
            Value="Transparent" />
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="FontFamily"
            Value="{DynamicResource VsFont.EnvironmentFontFamily}" />
            <Setter Property="FontSize"
            Value="{DynamicResource VsFont.EnvironmentFontSize}" />
            <Setter Property="Background"
            Value="Transparent" />
        </Style>
        <!--<Style TargetType="{x:Type ComboBox}">
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="FontFamily"
            Value="{DynamicResource VsFont.EnvironmentFontFamily}" />
            <Setter Property="FontSize"
            Value="{DynamicResource VsFont.EnvironmentFontSize}" />
            <Setter Property="Background"
            Value="Transparent" />
        </Style>-->
        <Style x:Key="ComboBoxTransparentButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition SharedSizeGroup="ComboBoxButton" Width="Auto"/>
                            </Grid.ColumnDefinitions>
                           
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <DockPanel >

            <StackPanel Margin="5" DockPanel.Dock="Top" Orientation="Horizontal" Height="25" >
                <TextBlock  VerticalAlignment="Center" Margin="5,2,5,2">Filter</TextBlock>
                <ComboBox Margin="5,2,5,2" ItemsSource="{Binding Filters}"  Background="{DynamicResource VsBrush.Window}" BorderBrush="Transparent"
             Foreground="{DynamicResource VsBrush.WindowText}" Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}"
                          SelectedItem="{Binding CurrentFilter}" Width="200" DisplayMemberPath="Name">
                 
                </ComboBox>
                <Button  Name="AddNewFilter"   Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                            Command="{Binding AddNewFilter}"
                            ToolTip="Add"
                            >
                    <Image Source="{Binding Converter={StaticResource PicConverter}, ConverterParameter='add.png'}" />
                </Button>
                <Button  Name="EditFilter"   Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                            Command="{Binding EditFilter}" Visibility="{Binding CurrentFilter, Converter={StaticResource NullToHiddenConverter}}"
                            ToolTip="Edit"
                            >
                    <Image Source="{Binding Converter={StaticResource PicConverter}, ConverterParameter='edit.png'}" />
                </Button>
                <Button  Name="DeleteFilter"  Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                            Command="{Binding DeleteFilter}" Visibility="{Binding CurrentFilter, Converter={StaticResource NullToHiddenConverter}}"
                            ToolTip="Delete"
                            >
                    <Image Source="{Binding Converter={StaticResource PicConverter}, ConverterParameter='delete.png'}" />
                </Button>
                <Separator/>
                <Button ToolTip="Clear" Name="CleanButton"   Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                            Command="{Binding Clear}"
                            IsEnabled="{Binding IsRecording, Converter={StaticResource RevertBool}}"
                            >
                    <Image Source="{Binding Converter={StaticResource PicConverter}, ConverterParameter='clear.png'}" />
                </Button>
                <CheckBox IsChecked="{Binding AutoScroll}" VerticalAlignment="Center"  Style="{StaticResource {x:Static ToolBar.CheckBoxStyleKey}}"  Foreground="{DynamicResource VsBrush.WindowText}"
                              Name="ScrollToEndCheck">
                    Autoscroll
                </CheckBox>
            </StackPanel>
            <controls:FilterBuilder  DockPanel.Dock="Top" 
                                     HorizontalAlignment="Stretch"
                                     Visibility="{Binding EditingFilter, Converter={StaticResource NullToHiddenConverter}}"/>
            <ScrollViewer Name="Scroller" BorderBrush="Transparent" Background="Transparent" Tag="{Binding AutoScroll}" VerticalScrollBarVisibility="Auto">
                <TextBox Name="Output"  BorderBrush="Transparent"  Text="{Binding Output}"
                         IsReadOnly="True"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch"
                         Padding="10"
                         />
                <!--Foreground="White"-->
            </ScrollViewer>
        </DockPanel>
    </Grid>
</UserControl>
